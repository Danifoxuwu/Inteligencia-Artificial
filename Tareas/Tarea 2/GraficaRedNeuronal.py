
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

# Datos proporcionados (simplificados para el ejemplo)
data = [
    [-650, -578, 41, 59], [-650, -408, 41, 59], [-637, -408, 41, 59], [-623, -408, 41, 59],
    [-610, -408, 41, 59], [-596, -408, 41, 59], [-582, -408, 41, 59], [-569, -408, 41, 59],
    [-555, -408, 41, 59], [-542, -408, 41, 59], [-528, -408, 41, 59], [-514, -408, 41, 59],
    [-501, -408, 41, 59], [-487, -408, 41, 59], [-474, -408, 41, 59], [-460, -408, 41, 59],
    [-446, -408, 41, 59], [-433, -408, 41, 59], [-419, -408, 41, 59], [-406, -408, 41, 59],
    [-392, -408, 41, 59], [-378, -408, 41, 59], [-365, -408, 41, 59], [-351, -408, 41, 59],
    [-338, -408, 20, 80], [-324, -408, 13, 87], [-310, -408, 13, 87], [-297, -408, 13, 87],
    [-283, -408, 13, 87], [-270, -408, 13, 87], [-256, -408, 13, 87], [-242, -408, 13, 87],
    [-229, -408, 13, 87], [-215, -408, 13, 87], [-202, -408, 13, 87], [-188, -408, 13, 87],
    [-174, -408, 13, 87], [-161, -408, 13, 87], [-147, -408, 13, 87], [-134, -408, 13, 87],
    [-120, -408, 53, 47], [-514, -584, 41, 59], [-495, -584, 41, 59], [-475, -584, 13, 87],
    [-456, -584, 13, 87], [-436, -584, 13, 87], [-417, -584, 13, 87], [-397, -584, 13, 87],
    [-378, -584, 13, 87], [-358, -584, 13, 87], [-339, -584, 13, 87], [-320, -584, 13, 87],
    [-300, -584, 13, 87], [-281, -584, 13, 87], [-261, -584, 13, 87], [-242, -584, 13, 87],
    [-222, -584, 13, 87], [-203, -584, 13, 87], [-183, -584, 13, 87], [-164, -584, 66, 34],
    [-532, -443, 41, 59], [-518, -443, 41, 59], [-503, -443, 41, 59], [-488, -443, 41, 59],
    [-473, -443, 41, 59], [-459, -443, 41, 59], [-444, -443, 41, 59], [-429, -443, 41, 59],
    [-414, -443, 41, 59], [-399, -443, 41, 59], [-385, -443, 41, 59], [-370, -443, 41, 59],
    [-355, -443, 13, 87], [-340, -443, 13, 87], [-326, -443, 13, 87], [-311, -443, 13, 87],
    [-296, -443, 13, 87], [-281, -443, 13, 87], [-267, -443, 13, 87], [-252, -443, 13, 87],
    [-237, -443, 13, 87], [-222, -443, 13, 87], [-208, -443, 13, 87], [-193, -443, 13, 87],
    [-178, -443, 13, 87], [-163, -443, 13, 87], [-148, -443, 13, 87], [-134, -443, 13, 87],
    [-119, -443, 66, 34], [-467, -788, 13, 87], [-440, -788, 13, 87], [-414, -788, 13, 87],
    [-388, -788, 13, 87], [-362, -788, 13, 87], [-335, -788, 13, 87], [-309, -788, 13, 87],
    [-283, -788, 13, 87], [-257, -788, 13, 87], [-230, -788, 66, 34], [-505, -545, 41, 59],
    [-487, -545, 41, 59], [-469, -545, 41, 59], [-451, -545, 16, 84], [-433, -545, 13, 87],
    [-414, -545, 13, 87], [-396, -545, 13, 87], [-378, -545, 13, 87], [-360, -545, 13, 87],
    [-342, -545, 13, 87], [-324, -545, 13, 87], [-305, -545, 13, 87], [-287, -545, 13, 87],
    [-269, -545, 13, 87], [-251, -545, 13, 87], [-233, -545, 13, 87], [-215, -545, 13, 87],
    [-196, -545, 13, 87], [-178, -545, 13, 87], [-160, -545, 61, 39], [-546, -447, 41, 59],
    [-531, -447, 41, 59], [-516, -447, 41, 59], [-502, -447, 41, 59], [-487, -447, 41, 59],
    [-472, -447, 41, 59], [-457, -447, 41, 59], [-442, -447, 41, 59], [-427, -447, 41, 59],
    [-412, -447, 41, 59], [-397, -447, 41, 59], [-382, -447, 41, 59], [-367, -447, 13, 87],
    [-353, -447, 13, 87], [-338, -447, 13, 87], [-323, -447, 13, 87], [-308, -447, 13, 87],
    [-293, -447, 13, 87], [-278, -447, 13, 87], [-263, -447, 13, 87], [-248, -447, 13, 87],
    [-233, -447, 13, 87], [-218, -447, 13, 87], [-204, -447, 13, 87], [-189, -447, 13, 87],
    [-174, -447, 13, 87], [-159, -447, 13, 87], [-144, -447, 13, 87], [-129, -447, 66, 34],
    [-518, -567, 41, 59], [-499, -567, 41, 59], [-480, -567, 41, 59], [-462, -567, 13, 87],
    [-443, -567, 13, 87], [-424, -567, 13, 87], [-405, -567, 13, 87], [-386, -567, 13, 87],
    [-367, -567, 13, 87], [-348, -567, 13, 87], [-329, -567, 13, 87], [-310, -567, 13, 87],
    [-291, -567, 13, 87], [-273, -567, 13, 87], [-254, -567, 13, 87], [-235, -567, 13, 87],
    [-216, -567, 13, 87], [-197, -567, 13, 87], [-178, -567, 13, 87], [-159, -567, 66, 34],
    [-475, -751, 13, 87], [-450, -751, 13, 87], [-425, -751, 13, 87], [-400, -751, 13, 87],
    [-375, -751, 13, 87], [-350, -751, 13, 87], [-325, -751, 13, 87], [-300, -751, 13, 87],
    [-275, -751, 13, 87], [-250, -751, 13, 87], [-225, -751, 13, 87], [-200, -751, 66, 34],
    [-463, -704, 13, 87], [-439, -704, 13, 87], [-416, -704, 13, 87], [-392, -704, 13, 87],
    [-369, -704, 13, 87], [-345, -704, 13, 87], [-322, -704, 13, 87], [-298, -704, 13, 87],
    [-275, -704, 13, 87], [-252, -704, 13, 87], [-228, -704, 13, 87], [-205, -704, 66, 34],
    [-560, -339, 41, 59], [-549, -339, 41, 59], [-538, -339, 41, 59], [-526, -339, 41, 59],
    [-515, -339, 41, 59], [-504, -339, 41, 59], [-492, -339, 41, 59], [-481, -339, 41, 59],
    [-470, -339, 41, 59], [-458, -339, 41, 59], [-447, -339, 41, 59], [-436, -339, 41, 59],
    [-425, -339, 41, 59], [-413, -339, 41, 59], [-402, -339, 41, 59], [-391, -339, 41, 59],
    [-379, -339, 41, 59], [-368, -339, 41, 59], [-357, -339, 41, 59], [-345, -339, 41, 59],
    [-334, -339, 41, 59], [-323, -339, 41, 59], [-312, -339, 41, 59], [-300, -339, 41, 59],
    [-289, -339, 41, 59], [-278, -339, 13, 87], [-266, -339, 13, 87], [-255, -339, 13, 87],
    [-244, -339, 13, 87], [-232, -339, 13, 87], [-221, -339, 13, 87], [-210, -339, 13, 87],
    [-199, -339, 13, 87], [-187, -339, 13, 87], [-176, -339, 13, 87], [-165, -339, 13, 87],
    [-153, -339, 13, 87], [-142, -339, 13, 87], [-131, -339, 13, 87], [-119, -339, 13, 87],
    [-108, -339, 13, 87], [-97, -339, 66, 34]
]

# Separar los datos en listas individuales
desplazamiento = [d[0] for d in data]
velocidad = [d[1] for d in data]
en_el_aire = [d[2] for d in data]
en_el_suelo = [d[3] for d in data]

# Crear la figura 3D
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')

# Graficar los puntos y las líneas
ax.plot(desplazamiento, velocidad, en_el_aire, marker='o', linestyle='-', color='b', label='En el Aire (%)')
ax.plot(desplazamiento, velocidad, en_el_suelo, marker='o', linestyle='-', color='r', label='En el Suelo (%)')

# Resaltar cambios significativos
for i in range(len(en_el_aire) - 1):
    if en_el_aire[i] != en_el_aire[i + 1] or en_el_suelo[i] != en_el_suelo[i + 1]:
        ax.plot([desplazamiento[i], desplazamiento[i + 1]],
                [velocidad[i], velocidad[i + 1]],
                [en_el_aire[i], en_el_aire[i + 1]],
                color='g', linewidth=2, linestyle='--')

# Añadir etiquetas y título
ax.set_xlabel('Desplazamiento de la bala')
ax.set_ylabel('Velocidad de la bala')
ax.set_zlabel('Porcentaje')
ax.set_title('Gráfica 3D de Desplazamiento, Velocidad y Porcentajes (En el Aire/En el Suelo)')
ax.legend()

# Mostrar la gráfica
plt.show()